Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-06-04T21:32:51-03:00

====== 00 - CronogramaModulos ======
Criado terça 04 junho 2024

* **04/06/2024:**  Criação versão inicial do cronograma

Basear no Google Analytics

* Criar de Dashboard
* Criar telas de Jobs (para apresentação)
* Criar tela de aplicações (Para apresentação)
* Configurar telas de  logs

Basear na versão antiga as telas 


====== Etapa 01: ~~Aplicação~~ Projeto ======
**Iniciado:** 04/06/2024

* Novo conceito de projeto para agrupar serviços e automações exclusivo
* Funciona como um agrupamento

[*] Adicionar ao menu
[*] Configurar Menu
[*] Configurar Banco de dados
[ ] Implementar CRUD de cadastro

====== Etapa 02: Serviços ======

[ ] Configurar banco de dados 
[ ] Tipo publico ou privado
	* **Publico** será oferecido externamente para os usuarios montar suas próprias automações, vendivel
	* **Privado** será exclusivo para uso da aplicação internamente 
		* Exemplo é a aplicação Google Analytics, terá 2 serviços interno, um para buscar paginação e outro para obter os registor daquela página
		* Porém será apenas utilzado por uma aplicação do tipo serviço que esse sim é publico e oferecido ao cliente

====== Etapa 03 - Workflows ======

* Poderá ser um workflow as service (transparente para o usuario, que verá como serviço. (será chamado de Serviço de automação)
	* Será obrigatóriamente associado a uma aplicação ??? pq?
	* pode ser publico ou privado tb
* Poderá ser de Workflow as user (será criado pelo usuário para montar sua automação). Será chamado de **Workflow**  e terá seu próprio menu, mas ficará dentro do menu **automação**
	* Não será oferecido a outros clientes, apenas pode ser copiado

* No futuro vamos implementar outras engine de workflow principalmente rednode e argo flow
	* Este deve ser básico
	* Estudar como integrar o rednode com kubernetes já q ele funciona normalmente por si só
	* Argo Workflow já é integrado com kubernetes necessário estudar bem

[ ] Configurar banco de dados
[ ] Implementar Crud
[ ] Implementar editor de workflow
	* Será workflow simplificado direto, para workflows mais complexo vamos implementar no futuro NODE RED ou ARGO Workflows
	* vamos utilizar: https://mermaid.js.org/intro/ por ser simples
	* Mas também temos JSPlumb e JointJS porém são editores de diagrama complexo
[ ] Workflow será descrito com um json  simples composto por array de etapas que será enviado peloas filas via pacote de dados

====== Etapa 04 - Automação (Workflow) as service ======

* Será workflows de usuário especiais (revendedores)
* Usuários comunus podem não ter acesso a lista de automação as service
* será feito para o usuario acessar
* Ao montar seu workflow, usuario poderá escolher uma automação pronta (será chamado de automação na interface de montagem de workflow)

====== Etapa 05 - Jobs ======

* Telas de monitoramento de jobs
* JobManager, executa o workflow


