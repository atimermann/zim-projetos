Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-02-05T19:49:49-02:00

====== API ======
Created sexta 05 fevereiro 2016

**Localização:**
	 bcp/application/libraries/api.php
Biblioteca que estende [[DBase]]


====== function handler ======


{{{code: lang="d" linenumbers="True"
	
	
	// $model = 'channel_user', $action = 'create'
	public function handler($model, $action, $id=false){
	
		if (!$this->handler_loaded){
			// Carrega Modelos
			$this->CI->load->model('api/m_apibase');
			
			// Aqui Carrega modelo channel_user e cria apelido  apimodel
			$this->CI->load->model('api/m_'.$model, 'apimodel');
		}
		$this->handler_cmd($action, $id, 'apimodel');
		
	}
}}}



**IMPORTANTE: **
* $this->CI foi um "chunchu" que o desenvolvedor criou para transforma a classe API num controller (contrução ruim
* $this->CI é uma chamada para o controler carregado do core do framework **(equivalente a $this em um controller normal)**
* $this->CI->load->model('api/m_'.$model, 'apimodel'); Carrega um model e cria um apelido para **apimodel**

{{{code: lang="d" linenumbers="True"
// $action = 'create', model = 'apimodel'
protected function handler_cmd($action, $id=false, $model){
		/*
		$omit = array('search', 'data');
		if (!in_array($action, $omit)){
			$this->pageinit();
		}
		*/
		try {
			switch($action){
				case 'new':
					$this->CI->$model->get('new', 'html');
				break;
				case 'edit':
				case 'get':
					$this->CI->$model->get($id, 'popup');
				break;
				case 'update':
					$this->CI->$model->put($id);
				break;
				case 'view':
				case 'search':
					$this->CI->$model->$action($id);
				break;
				default:
					
					// AQUI API MODEL É UMA INSTANCIA DA CLASSE M_channel_user
					
					//$this->CI->apimodel->extend(create, <Array vazio>);				
					// Na verdade estamos chamando channel_user
					$this->CI->$model->extend($action, $id);
				break;
			}
		} catch(Exception $ex){
			$this->errCatch($ex->getMessage());
		}
	}
}}}


**FUNÇÃO CHAMADA:**
	
	Será chamada a função extend, que por usa vez chamará outra função dinamicamente
	
	extend está na classe pai : [[BCP:models:api:M apibase]] (	bcp/application/models/api/m_apibase.php -> extend)
	
	Porém a chamada q extend irá fazer está na classe filha:	
	[[BCP:models:api:m channel user]] (bcp/application/models/api/m_channel_user.php)
	
	O método gerado por extend será prefixado com ext_
	portanto será chamando
	**M_channel_user->ext_create**
	
	
	
	  
