Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2016-12-01T14:03:49-02:00

====== VueAdmin ======
Created quinta 01 dezembro 2016

[ ] Precisamos criar um projeto modelo para ser criado via cli (como vue-cli) pois muitas configurações precisam ser feitas
	* Ver projetos  smartify-grid e smartify-form
	* configurar **babel**
	* configurar **webpack**
	* configurar **packages.json**
	* Remover exlude node_modules do .js na configuração webpack
	* Pode remover o .babelrc e configurar direto no webpack (veja exempli abaixo)
	* Obrigatótio desativar o modules se não biblitoecas importada com script-loader vão tentar usar [[ComminJs]] e vai dar problema, elas não devem saber sua existencia
	* Já tem disponível es2017
**Correto (para não dar conflito com bibliotecas):**
{{{code: lang="js" linenumbers="True"
{
    test: /\.js$/,
    loader: 'babel-loader',
    query: {
        "presets": [
            ['es2015', {modules: false}]
        ],
    }

},
{
    test: /\.jsx$/,
    loader: 'babel-loader',
    query: {
        "presets": ["es2015"],
        "plugins": ["transform-vue-jsx"]
    }
}
}}}

[ ] Definir Processo de criação de módulo
	* Criar versão pré-compilado, para os modulos basta importar esse js (tem algumas pegadinhas, veja no smartify-form)
	* Permitir que o projeto compile carregando do src
	* Criar pasta exemples
[ ] Entender como funciona a dependencias de modulos ao compilar com webpack, quando que o modulo precisa estar instalado no projeto Host e quando no projeto onde está o modulo. Mesmo vale pra **.babelrc**


* Desenvolvimento de um novo painel admnistrador em conjunto com o Carlos
* Baseando no Sindri Admin, separado em componentes
* Deve ser independente de template, possivel trocar o layout sem problemas (atenção para formulário e grid)
* **Importantissimo: **
	* Já ir criando documentação de uso e configuração
	* Já ir criando pasta demo, como exemplo de uso (em standalone, em conjunto (crud) e com personalização de template)
	* Pensar em formas de automatizar criação, cli, web, scafolding

{{./pasted_image.png}}

* menu
* Breadcrump
* Admin-auth

====== Fases ======

===== Fase 01 (Estudo da Tecnologia, Análise e Projeto) =====
	* Estudo do VueJs
	* Estudar viabilidade do desenvolvimento dos componentes
	* Discussão da arquitetura do sistema
	* Definir Repositório
	* Analisar oq tem pronto
	* Combinar  metodologia de commit
	* Suporte a Mobile


===== Fase 02:  (Form) =====

	[*] Possibilidade de geração automatica (através de um json descritivo)
	[*] Deve  inserir json ao instanciar 
	[ ] Pode carregar json do servidor automaticamente via API
	[ ] Deve poder  salvar e carragar dados diretamente do servidor
		[ ] Salvar e continuar
	[*] Módular para facil desenvolvimento de novos Templates
	[ ] **Permite carregar outros formulários via modal (Exemplo, cadastro inline)**
		[ ] **Importar configuração de outro lugar**
	[*] Fields devem ser possível de desenvolver em componentes
	[ ] Permitir Máscara (módulo a parte, estudar biblitoeca de terceiros)
	[ ] Permitir Validação (Módulo a parte, estudar biblitoeca de terceiros)
	[ ] Permitir Filtros  (Módulo a parte, estudar biblitoeca de terceiros)
	[ ] Json que descreve formulário deve ser compatível com o Grid
		[ ] Projetar o descritivo previamente 
	[*] **Deve ser possível organizar posição dos campos facilmente (Na ultima versão utilizei o grid do bootstrap)**
	[*] Deve ter template de facil personalização ( só mudar um parâmetro, muda o layout)
	[ ] Campos/ Mascaras/ Validação e Filtros devem ser criado na forma de plugins 
		* Ter uma arquivo próprio (exemplo: autocomplete.js na pasta fields) para facil desenvilvimento posterior
		* Mascará é inerente a um field especifico (não ficará separado)
		* Validação, entender como personalizar
	[ ] Implementação do layout do schema  estrutural e dados (São 2)
		* Unica forma é mudandl o stilo na propriedade, **(TESTAR BEM)**
	[x] Suporte a [[WebSocket]]
		[x] Edição Compartilhada
	* ~~Edição Exlusiva, (Bloquear outras pessoas de editar)~~
	[*] Preparado para formulario do tipo varias etapas que vai salvando na base (deixar fácil)
	[ ] Documentar BEM
	[ ] Suporte a Aba
	[ ] Suporte a Notificação (Talves usar uma aplicação separada)
	[ ] Suporte a Modal, para confirmações

**Componentes Existentes:**
https://github.com/icebob/vue-form-generator (Para versão 2 está em ~~desenvolvimento~~ beta)
https://github.com/matfish2/vue-form-2



===== Fase 03: (Grid) =====

--------------------
Próximas tarefas:
[*] Desenvolver seleção de registro (Seleção Multipla)
[ ] Testar acesso a id da coluna com botões ou outras informações
[ ] Configurar Colunas via schema
[ ] Gerenciar Dados e verificar alteração por fora 
	[ ] Testar Desempenho
[*] Atualizar Dados via servidor
[*] Configurar Socket
--------------------

 


[ ] Deve ser configurável através de um schema
[*] **Cuidado, estudar bastante, levantar todos os requisitos**
[*] Deve ser de facil extensão, cada coluna, célula, exemplo: poder criar célula com gráfico q é atualizado dinamicamente
[*] Sorting (Click column header)
[ ] Grouping (Use the advanced options)
[ ] Filtering
[ ] Permitir Edição de Celula
[x] Permitir seleção de coluna
[ ] Custom cell templates (override default for whole grid or just a specific column)
[ ] Custom filters for cell content
[*] Deve funcionar em stand alone
[*] **Deve ser facilmente customizavel com template**
[ ] Paginação
[*] Atualização em tempo real com  [[WebSocket]]
[ ] https://gist.github.com/dobbsryan/26bd44d6c51a2c6af9388c0c8c4ea463

[ ] Paginação 100% cliente, 100% servidor ou misto
[ ] Rolagem infinita
[ ] Filtragem Avançada
[ ] Filtro por Coluna
[*] Ordenação Multipla

[ ] Opção de ativar/desativar modulo de filtro (no caso do server por exemplo, toda operação ficará com o servidor), comandos de ordenação vai pro server e não pro filter

**Componentes Existentes:**
https://vuejs.org/v2/examples/grid-component.html
https://github.com/matfish2/vue-tables-2
https://forum-archive.vuejs.org/topic/3558/advanced-datagrid-component/5

https://github.com/matfish2/vue-tables-2
**é o melhor**

**Não existe nada minimamente bom para vue, e implementar dá muito trabalho**
Pensar em usar legados e adaptar:
https://datatables.net/

===== Fase 04: (Crud) =====


	* Integra Grid e Form para gerar um grud totalmente automatico
	* carrega o Json e propaga para o form e grid gerado
	* Ainda é complexo configurar o crud, muitas etapas, culpa do angular? pode ser, mas criar uma interface de configuração de crud via web ou cli (Usar scafolding? ou automatizado? pensar)
		* Importante é deixar flexivel para personalização (MUITO IMPORTANTE, talvez por este ponto manter scafolding)
		* Mas permitir configuração rápida, não posso perder 2 horas pra configurar um crud

===== Fase 05: (Admin) =====
	
	* Simplificar muito a criação de novos links, veja no sindriAdmin com angular, tem q fazer uma infinidade de configuração para cada página, totalmente não intuitivo, deve ser tudo simples e direto 
		* Preferencialmente configuração em um lugar só (Já desenvolver pensando nisso)

	* Suporte a Modal
	* Suporte a autenticação via popup (modal) automatico
	* Suporte a gerenciamento de Slots e Rotas para plugar novos componentes
	* Tela de login
	* Sistema de autenticação por chave via api , modelo OAuth2 https://oauth.net/2/
	* Criptografia bcrypt
	* Alerta padrão do sistema (Dialogo de alerta ex: sweet alert/ bootstrap notify)
	* Scripts cli para geração automatico (seguir padrão do [[VueJS]])
	* Facil personalização com mudança de Template

	* Criar um template básico simples, sem nenhum componente externo apenas para dev, e implementar suporte a template tão facil quando mudar uma chave (Não amarrar, não deixar acoplado)

	* Estrudar, aprender e usar VUEX para gerenciar estados devido a complexidade da aplicação


==== Rotas ====
* Deve retornar um objeto no formato compatível com o vue-router
* //http://router.vuejs.org/en/essentials/getting-started.html

/*
  { path: '/foo', component: Foo },
 */

* Pode retornar um Array de componentes

**Projetos Existentes:**

https://github.com/vue-bulma/vue-admin
http://bulma.io/
https://github.com/vue-bulma
