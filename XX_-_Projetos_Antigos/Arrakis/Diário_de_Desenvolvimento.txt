Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2013-11-25T00:05:11-02:00

====== Diário de Desenvolvimento ======
Created segunda 25 novembro 2013

====== segunda 25/11/2013 ======


* Existem 4 projetos associado ao arrakis:
	* **arrakis (código fonte do arrakis a ser importado)**
	* **arrakis_old (versão antiga)**
	* **arrakis_develop (Usado para desenvolvimento do Arrakis, não fica no repositorio)**
	* **arrakis_project (Usado para testes)**

* Encontrado diretório vazio admin-source
	* Imagino que sirva para projeto admin do od

* Script init.py executa por linha de comando para depuração, mas não funcionou. MSG: 
	* **ImportError: Could not import settings 'arrakis_project.settings' (Is it on sys.path?): No module named arrakis.system**
	* No arquivo init.py, PWD estava com caminho errado, alterado para:
		* 'PWD': '/home/andre/projetos/python/arrakis/arrakis_project',
	* **SOLUÇÃO: **É necessário configurar o PATH do python para executar o init.py, configurei na IDE pycharm, existem scripts runserver.sh, test.sh, etc para executar por linha de comando

* **ImportError: Could not import settings 'arrakis_develop.settings' (Is it on sys.path?): No module named yaml**
	* **SOLUÇÃO:** sudo pip-2.7 install PyYAML

* **ImportError: No module named bs4**
	* **SOLUÇÃO: **sudo apt-get install python-bs4 python-bs4-doc
	* Depois descobri que é possível com o pip:
		* sudo pip install beautifulsoup4 --upgrade

* **ImportError: No module named south**
	* **SOLUÇÃO:** sudo pip install South

* __[OK, EXECUÇÃO CONCLUIDA COM SUCESSO]__

* Como executar o admin novo
	* Dificuldade para encontrar plugins disponível, desenvolver um script
	* Dificuldade para saber quais urls são processaveis

* Existe uma documentação abundante do novo admin em **/app/ArrakisAdmin/__init__.py**

* Para acessar o admin basta usar a URL [[/admin]] mesmo!!!
* Para trocar de usuario caso não lembre da senha use **./manage.py changepassword** ou usar **./manage.py createsuperuser**

* Está carregando todas as páginas, não consigo verificar quais urls e como as urls estão configuradas, falta um 404
	* Seria ter um depurador na barra de ferramenta do django depurando as urls carregadas

* Lembro de ter criado uma tela para edição de página, mas não consigo carrega-la
	* http://127.0.0.1:8000/admin/widget/1

* __Fazer um manual básico das funcionalidades do arrakis, como chamar plugin, como funciona etcc__
	* Lembrei que já existe um sistema de documentação embutida no Arrakis: **/arrakis/arrakis/docs**
	* Instalar o gerador Sphinx :
		* **pip install Sphinx**
		* Ver temos mais bonitos par ao sphinx, existe um que usa o bootstrap
		* Colocar na documentação um artigo de como editar os arquivos .rst

* __Atualizar a documentação com informações básicas e central sobre o framework__


====== sexta 13/12/2013 ======


* Ativação do projeto de teste arrakis_project, (todo: mudar o nome para arrakis_test)
* Não esquecer de colocar criar um link para o arrakis no path do python
	__sudo ln -s /home/andre/projetos/python/arrakis/arrakis /usr/lib/python2.7/dist-packages/arrakis__

ou então, colocar o caminho no path do python
	__>>> import sys__
	__>>> sys.path__
	__['', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/PILcompat', '/usr/lib/python2.7/dist-packages/gtk-2.0']__


* Alterei o banco de dados para sqllite pela flexibilidade
* Sincronizei o banco no arrakis_project
	* __./manage.py syncdb__

* Agora é necessário configurar o south, porém por padrão os arquivos do migrate fica no diretório do aplicativo, porém no arrakis em vez de cada projeto ter sua pasta com uma cópia dos aplicativos, os aplicativos ficam todos centralizados no diretório de instalação do arrakis.
Foi alterada a configuração do arrakis, para que os arquivos de migração fiquei localizados no diretório do projeto dentro da pasta migrate, no casso do arrakis_project (futuro arrakis_teste) fica em

	**arrakis_project/migrate/[nome_do_app**
	
	[[06 Cursos-Tutoriais:Linguagens:Python:Python - Django:South]]
	
Comandos executasdos para atualizar o South:
	__#  ./manage.py schemamigration Pagina --auto__
	__# ./manage.py migrate Pagina --fake__
	

**PROBLEMA: Modelo do Widget não está carregando**

* O log fica em /tmp/arrakis.log

* Sem querer removi todos os scripts do pycharm, reconfigurei o gerador de documentação sphinx
	* [[/home/andre/projetos/python/arrakis/arrakis/docs/source]]
	* /home/andre/projetos/python/arrakis/arrakis/docs/build

**MOTIVO do Widget não carregar**
	"from arrakis.app.Pagina.models import Pagina"
Por algum motivo ao carregar Pagina não funciona

**Porque ao importar Pagina, o Widget é ignorado?**

**Pistas**
* Problema ocorre quando é aplicado o decorados @arrakisModel no modelo Pagina. Parece que não pode executar em um modelo importado
* Mesmo que eu desabilite o arrakisModel no  Widget continua não carregando
* Problema só ocorre no South, BUG com o SOUTH

**Importante:**
* Parece que o problema é apenas na hora de exibir no syncdb que o widget está sob controle do south:
	**Not synced (use migrations):**
	** - arrakis.app.Pagina**
	**(use ./manage.py migrate to migrate these)**
* Pois ao executar o migrate no Widget funcionou sem problemas:
	__# ./manage.py migrate Widget__
	**<class 'arrakis.app.Widget.models.Widget'>**
	**Running migrations for Widget:**
	**- Nothing to migrate.**
	** - Loading initial data for Widget.**
	**Installed 0 object(s) from 0 fixture(s)**


Problema resolvido, Tudo funciona, tive problema com a migração, mas reiniciei os arquivos do south, removi chave estrangeira, coloquei novamente e tudo certo

Instalei os programas sqliteman e um complemento pro firefox(melhor) para gerenciar o banco de dados sqlite

====== segunda 16/12/2013 ======


Agora realizar os testes

Para que os testes funcionem, é necessário instalar uma dependência:
	__$ sudo pip install ddt__
	
Para executar o teste, usei:
	__$ python arrakis-admin.py test__
	
Ainda bem que já criei um script que faz tudo, porém tive que alterar o caminho do teste dentro do código fonte (facil de encontrar)

Quase nenhum teste funcionou, arrumar os testes ou prosseguir?

**TODO:** Existe um padrão de como criar testes no arrakis, documentar

Já existe uma documentação nos arquivos de código fonte, ver em **arrakis/test**

===== Tarefa 01: Template - Teste - Status atual: 13% =====

* Passar no Teste atual
* Criar teste para load e extend já com alteração de automatização de template do próprio app
* Testar usando callplugin e getResource

* Execução do teste: 
	 __$ ./manage.py test Template__

**Encontrei este código para evitar dependencia circular, tentar aplicar no arrakis:**
#import settings to prevent circular dependencies later on import django.db
try:
	from django.conf import settings
	apps = settings.INSTALLED_APPS
except:
	pass

==== Problema no Teste no arrakis ====

**Erro: **django.core.exceptions.ImproperlyConfigured: Requested setting CACHES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.

**Solução:**
Run/Debug Configurations > Django Tests > Test Template > Custom settings: **/home/andre/projetos/python/arrakis/arrakis_test/arrakis_test/settings.py**

Setar maxDiff para None, para mostrar diff
	**def setUp(self):**
**        self.templateApp = Template.TemplateApp()**
**        self.maxDiff = None**


====== quarta 18/12/2013 ======

* Passar todos os testes atuais

===== Instalação de um cliente Bom para o Redmine =====

RMCLiente (http://rmclient.org/help/#question-5)

Necessário instalar a ultima versão do adobe, porém não tem mais suporte a Linux portanto é necessário usar o linux, antes não esqueça de :

	__$ winetricks dlls winhttp__
	__$ winetricks dlls wininet__ 
	
Deve ser instalado por:
	__/home/andre/.wine/drive_c/Program Files (x86)/Common Files/Adobe AIR/Versions/1.0/wine airappinstaller.exe RMClient.air __
	

====== quinta 02/01/2014 ======

Voltando a trabalhar nos testes.

Problema no 
**/usr/lib/python2.7/dist-packages/arrakis/app/Template/__init__.py**
class TemplateBuffer(object):
	def __getattribute__(self, item):
		buffer = object.__getattribute__(self, "buffer")
		return getattr(buffer, item)

As vezes é necessário obter o atributo diferente de buffer, mas nao é possível. Se remover o __getattribute__ outros problemas ocorrem.
:Projetos:Projetos Antigos:Diário de Desenvolvimento:TemplateBuffer é um objeto especial que deve funcionar como uma string, além de que deve ser possível iterar sobre ele

Antes de corrigir, criar testes especificos para o load e extend (TDD) que é onde o erro ocorre

====== domingo 05/01/2014 ======

Criar testes para o include e o extend (é include não load, arrumei)

Será feito teste com os diferentes formatos

Passou no teste do include, problema é outro

* Verifique o objetivo do :Projetos:Projetos Antigos:Diário de Desenvolvimento:TemplateBuffer
	* No arrakis tudo deve ser um objeto do tipo template, isto é necessário pela forma com os templates interagem entre
		si, não sendo possível usar string para algumas operações como operações de concatenação.
	
		Porém muitas vezes gostariamos de adicionar uma string simples, que não será renderizada, por isso existe este
		objeto, ele serve os tipos string porém tem a capacidade de ser concatenado com um Template.
	
**NOTE** que podemos concatenar dois TEMPLATES entre si, ou ainda podemos concatenar um TEMPLATE com um STRING
veja Template.__add__
Concatenações são usada pelo Template ao adicionar váriaveis

Leia sobre o Loader também: Template.Loader



**IMPORTANTE: ** O problema não está no include ou extend, o problema está no carregamendo dos plugins

Pois o template tem uma propriedade de guardar o valor das váriáveis dentro de sigo mesmo

**Exemplo**
		template["plugins"] = {
			"slot1": "MEU PLUGIN AQUI 1",
			"slot2": "MEU PLUGIN AQUI 2"
		}
		template["slot3"] = "OUTRO SLOT AQUI"

Esse é o motivo da existencia do Get Atribute

Veja Template.__setitem__

**RESUMO DO BUG:**
Problema está no contexto, Template/tests.py Template_render

* Criamos um novo objeto Template (Objeto do arrakis, o app)
* Definimos algumas váriaveis do tipo string:
	* template["slot3"] = "OUTRO SLOT AQUI"
* Internamenta a STRING é convertida num objeto TemplateBuffer, que vai imitar o comportamento de uma string, mas com propriedades especiais (isto é necessário pela forma com os templates interagem entre si, não sendo possível usar string para algumas operações como operações de concatenação.
* Ao renderizar é criado um CONTEXTO, é passado para o CONTEXTO o objeto Template, que fica disponível para uso dentro do contexto.
* Internamente no django é feito a renderização, que precisa usar um JOIN de string
* Porém, não funciona, pois recebe um :Projetos:Projetos Antigos:Diário de Desenvolvimento:TemplateBuffer em vez de uma string (Já que convertemos)


**OFF: **Resolvi um bug no __add__ do template, que estavo alterando o objeto que seria somado

**ATENÇÃO: **A tag safe  diz para o django escapar automaticamente as tags no template, resultava em problemas no template, não lembro exatamente como

**SOLUÇÃO:** Usar __getattr__ em vez de __getatribute__, veja mais info aqui:
http://stackoverflow.com/questions/3278077/difference-between-getattr-vs-getattribute-in-python

Problema continua ao carregar váriaveis

**SOLUÇÃO:**
	adicionar def __getitem__(self, item): no Template Buffer

**NOVA SOLUÇÃO REVOLUCIONARIA:**
	Removido o Template Buffer, era inútil e desnecessário.
	
Finalizado testes atuais

**Iniciado tarefa para colocar (appRequested) automáticamente..**

Desativei os outros apploader no setting.py

Tentando fazer com empressão regular, muitos problemas, parei aqui

NOVA TENTATIVA, CONSEGUI, o problema agora é o RAW...

===== segunda 06/01/2014 =====

Trabalhei na expressão regular do automatizador do appRequest

Próximos passos:
~~- Otimizar expressões regulares do Loader~~
**- Escrever restante dos testes**
- Verificar TODO (ver oq pode ser feito e passar pro redmine)
- Documentar (de forma que mostre o caso de uso simples, depois os complicados)
~~- Comitar no Andre~~

- Simplificar diretórios


===== quinta 09/01/2014 =====

- Estou desmembrando o loader, para o teste, criei o parseTemplatePath, finalizar desenvolvimento


====== Tarefas: ======

* Focar em cada uma das tarefas, não ter pressa, ter paciencia, importante é fazer as coisas direito

* Template: (20%) **15%**
	* Teste (5%) **4%**
	* Documentação (5%) **2%**
	* Desenvolvimento (10%) **9%**

* Pagina (20%) **0%**
	* Teste (5%) **0%**
	* Documentação (5%) **0%**
	* Desenvolvimento (10%) **0%**

* Widget (20%) **0%**
	* Teste (5%) **0%**
	* Documentação (5%) **0%**
	* Desenvolvimento (10%) **0%**

* Admin (20%) **0%**
	* Teste (5%) **0%**
	* Documentação (5%) **0%**
	* Desenvolvimento (10%) **0%**

* MultiSite (20%) **0%**
	* Teste (5%) **0%**
	* Documentação (5%) **0%**
	* Desenvolvimento (10%) **0%**

**TOTAL:   15%**
