Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-12-29T16:34:54-03:00

====== Configuração Plataforma K3s ======
Criado sexta 29 dezembro 2023

====== Arquitetura: ======

Ambiente de homologação utilizando k3s, deve servir como ponto de partida para configuração de produção on-premise (Recomendo RKE) ou nuvem (google/azure/aws)

* 3 nós Control Plane (exclusivo gestão do cluster)
* 3 nós Data Plane (exclusivo execução das aplicações)
* 2 nós Load Balance para conexão ao cluster
* 1 VM banco de dados
* 1 VM Storage NFS montado sob iscsi

===== IPs =====

10.50.255.100   cluster.datafrost-cic.idc
10.50.255.7     lb01.datafrost-cic.idc
10.50.255.8     lb02.datafrost-cic.idc

10.50.255.1     control01.datafrost-cic.idc
10.50.255.2     control02.datafrost-cic.idc
10.50.255.3     control03.datafrost-cic.idc

10.50.255.4     agent01.datafrost-cic.idc
10.50.255.5     agent02.datafrost-cic.idc
10.50.255.6     agent03.datafrost-cic.idc

10.50.255.9     database.datafrost-cic.idc
10.50.255.250   storage.datafrost-cic.idc



===== Load Balance =====

DTF-LAP-LB01-Dev HA-Proxy 10.50.255.7
DTF-LAP-LB02-Dev HA-Proxy 10.50.255.8

**IP Virtual:** 10.50.255.100

Haproxy
{{{code: lang="js" linenumbers="True"
frontend k3s-frontend
    bind *:6443
    mode tcp
    option tcplog
    default_backend k3s-backend

backend k3s-backend
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s
    server control01 10.50.255.1:6443 check
    server control02 10.50.255.2:6443 check
    server control03 10.50.255.3:6443 check    
}}}

KeedAlived
{{{code: lang="js" linenumbers="True"
vrrp_script chk_haproxy {
    script 'killall -0 haproxy' # faster than pidof
    interval 2
}

vrrp_instance haproxy-vip {
   interface enp6s18
    state BACKUP # MASTER on lb-1, BACKUP on lb-2
    priority 100 # 200 on lb-1, 100 on lb-2

    virtual_router_id 51

    virtual_ipaddress {
        10.50.255.100/24
    }

    track_script {
        chk_haproxy
    }
}

}}}




====== Instruções ======

* Instalar kubectl
* Instalar o k (configuração bashrc)
* kubecolor se interessar

===== Instalação Control Plane =====


curl -sfL https://get.k3s.io | sh -s - server --cluster-init --tls-san=10.50.255.100 --node-taint CriticalAddonsOnly=true:NoExecute --disable=servicelb

===== Adicionando outros control plane =====

**Obter o token no primeiro servidor em:**
	cat /var/lib/rancher/k3s/server/node-token

curl -sfL https://get.k3s.io | K3S_TOKEN=K1010b0e089b498250842831c24b03279c73a038ba3c2d4a789675ee48261cf9214::server:79eec29da1d678c88f2538911f219dac sh -s - server --server https://10.50.255.100:6443 --tls-san=10.50.255.100 --node-taint CriticalAddonsOnly=true:NoExecute
	
===== Adicionando agentes =====

curl -sfL https://get.k3s.io | K3S_TOKEN=K1010b0e089b498250842831c24b03279c73a038ba3c2d4a789675ee48261cf9214::server:79eec29da1d678c88f2538911f219dac sh -s - agent --server [[https://]][[https://10.50.255.100:6443|10.50.255.100]][[:6443]]
