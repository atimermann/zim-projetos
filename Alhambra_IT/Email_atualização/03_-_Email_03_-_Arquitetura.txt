Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-11-11T19:40:08-03:00

====== 03 - Email 03 - Arquitetura ======
 Criado sábado 11 novembro 2023

Arquitetura para o projeto [[DataFrost]]

Neste modelo, cada serviço é encapsulado em seu próprio contêiner, com o Kubernetes responsável pelo escalonamento, auto-restauração e gerenciamento de ciclo de vida dos contêineres. 

A arquitetura de microserviços em Kubernetes e comunicação entre serviços em uma arquitetura de microserviços no Kubernetes ficaria assim:

**Autenticação e Autorização:** Um serviço centralizado de autenticação, com o Keycloak

**Armazenamento de Imagens:** O MinIO, um armazenamento de objetos de alta performance e compatível com a API do Amazon S3, é ideal para armazenar imagens.

**Banco de Dados:** Adotar o padrão de "Database per Service", onde cada serviço mantém seu próprio banco de dados, ou um banco de dados compartilhado externo, dependendo da complexidade e necessidade de compartilhamento de dados.

**Filas e Mensageria:** Sistemas de mensagens com RabbitMQ   para desacoplar serviços, permitindo comunicação assíncrona e resiliente, ideal para processamentos que não são imediatos ou que demandam muitos recursos.

**Orquestração de Workflows:** O Argo Workflows, nativo do Kubernetes, é  para gerenciar fluxos de processamento, permitindo definir sequências complexas de tarefas.

**Padrões de Comunicação:** Para a comunicação entre serviços, **chamadas REST ou gRPC** ou **Socket.io** entre aplicaçaões web com backend ou outra aplicação desenvolvida por nós com suporta (atualmente suporta Nodejs e python e Java)

**Monitoramento e Logging:**  Prometheus e Grafana para métricas, e **ELK Stack** (Elasticsearch, Logstash, Kibana) ou Loki para logs, crucial para manter a visibilidade em ambientes distribuídos.

**CI/CD:** Automatizar o teste, construção e implantação de serviços.

